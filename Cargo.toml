[package]
name = "pre-commit-rs"
version = "0.1.0"
authors = ["j178 <10510431+j178@users.noreply.github.com>"]
description = "pre-commit implemeneted in Rust"
repository = "https://github.com/j178/pre-commit-rs"
homepage = "https://github.com/j178/pre-commit-rs"
edition = "2021"
publish = false

[dependencies]
anstream = "0.6.15"
anyhow = "1.0.86"
assert_cmd = { version = "2.0.16", features = ["color"] }
clap = { version = "4.5.16", features = ["derive"] }
ctrlc = "3.4.5"
fs-err = "2.11.0"
fs2 = "0.4.3"
futures = "0.3.31"
home = "0.5.9"
indicatif = "0.17.8"
indoc = "2.0.5"
itertools = "0.13.0"
owo-colors = "4.1.0"
rusqlite = { version = "0.32.1", features = ["bundled"] }
serde = { version = "1.0.210", features = ["derive"] }
serde_json = "1.0.128"
serde_yaml = "0.9.34"
shlex = "1.3.0"
tempfile = "3.13.0"
thiserror = "1.0.64"
tokio = { version = "1.40.0", features = ["process", "rt"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
url = { version = "2.5.2", features = ["serde"] }
which = "6.0.3"

[dev-dependencies]
assert_fs = "1.1.2"
insta = { version = "1.40.0", features = ["filters"] }
insta-cmd = "0.6.0"
regex = "1.11.0"

[lints.rust]
dead_code = "allow"

[[bin]]
path = "src/main.rs"
name = "pre-commit"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[package.metadata.dist]
dist = true

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.22.1"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# CI backends to support
ci = "github"
# Whether CI should trigger releases with dispatches instead of tag pushes
dispatch-releases = true
# Which actions to run on pull requests
pr-run-mode = "plan"
# Which phase cargo-dist should use to create the GitHub release
github-release = "announce"
# The installers to generate for each app
installers = ["shell", "powershell", "homebrew"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# A GitHub repo to push Homebrew formulas to
tap = "j178/homebrew-tap"
# Customize the Homebrew formula name
formula = "pre-commit"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Whether to install an updater program
install-updater = false
